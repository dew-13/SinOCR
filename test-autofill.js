require('dotenv').config();
const { GoogleGenerativeAI } = require('@google/generative-ai');

async function testUpdatedAPI() {
  try {
    console.log('üß™ Testing Updated AI Document Processing API');
    console.log('='.repeat(50));
    
    const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);
    const model = genAI.getGenerativeModel({ model: 'gemini-1.5-flash' });

    // Simulate extracted OCR text (like what would come from your Sinhala document)
    const mockSinhalaText = `
    1. ‡∑É‡∂∏‡∑ä‡∂¥‡∑ñ‡∂ª‡∑ä‡∂´ ‡∂±‡∂∏: ‡∂ö‡∂∏‡∂Ω‡∑ä ‡∂¥‡∑ô‡∂ª‡∑ö‡∂ª‡∑è
    2. ‡∑É‡∑ä‡∂Æ‡∑í‡∂ª ‡∂Ω‡∑í‡∂¥‡∑í‡∂±‡∂∫: 123, ‡∂ú‡∑è‡∂Ω‡∑ä‡∂Ω ‡∂¥‡∑è‡∂ª, ‡∂ö‡∑ú‡∑Ö‡∂π 03
    3. ‡∂¥‡∑Ö‡∑è‡∂≠: ‡∂∂‡∑É‡∂ª‡∂ß
    4. ‡∂Ø‡∑í‡∑É‡∑ä‡∂≠‡∑ä‚Äç‡∂ª‡∑í‡∂ö‡∑ä‡∂ö‡∂∫: ‡∂ö‡∑ú‡∑Ö‡∂π  
    5. ‡∂¢‡∂±‡∑ä‡∂∏ ‡∂Ø‡∑í‡∂±‡∂∫: 1990/05/15
    6. ‡∂¢‡∑è‡∂≠‡∑í‡∂ö ‡∑Ñ‡∑ê‡∂≥‡∑î‡∂±‡∑î‡∂∏‡∑ä‡∂¥‡∂≠: 199012345678
    7. ‡∂¢‡∂Ç‡∂ú‡∂∏ ‡∂Ø‡∑ñ‡∂ª‡∂ö‡∂Æ‡∂±: 0771234567
    8. ‡∑É‡∑ä‡∂≠‡∑ä‚Äç‡∂ª‡∑ì/‡∂¥‡∑î‡∂ª‡∑î‡∑Ç: ‡∂¥‡∑î‡∂ª‡∑î‡∑Ç
    9. ‡∑Ä‡∑í‡∑Ä‡∑è‡∑Ñ‡∂ö ‡∂≠‡∂≠‡∑ä‡∑Ä‡∂∫: ‡∂Ö‡∑Ä‡∑í‡∑Ä‡∑è‡∑Ñ‡∂ö
    10. O/L: ‡∂á‡∂≠
    11. A/L: ‡∂±‡∑ê‡∂≠
    12. ‡∑Ä‡∑ê‡∂© ‡∂Ö‡∂≠‡∑ä‡∂Ø‡∑ê‡∂ö‡∑ì‡∂∏: ‡∂Ö‡∑Ä‡∑î‡∂ª‡∑î‡∂Ø‡∑î 2 ‡∂ö‡∑ä ‡∂ö‡∂©‡∑ô‡∑Ñ‡∑í ‡∑Ä‡∑ê‡∂©
    `;

    const prompt = `
Extract student data from this Sinhala text and convert to English. Return ONLY valid JSON:

TEXT: ${mockSinhalaText}

Convert Sinhala names/addresses to English. Use these Sri Lankan provinces: Western, Central, Southern, Northern, Eastern, North Western, North Central, Uva, Sabaragamuwa.

Format dates as YYYY-MM-DD. Phone numbers as 9 digits only.

JSON format:
{
  "fullName": "",
  "permanentAddress": "",
  "province": "",
  "district": "",
  "dateOfBirth": "",
  "nationalId": "",
  "passportId": "",
  "passportExpiredDate": "",
  "sex": "",
  "maritalStatus": "",
  "spouseName": "",
  "numberOfChildren": 0,
  "mobilePhone": "",
  "whatsappNumber": "",
  "emailAddress": "",
  "hasDrivingLicense": false,
  "vehicleType": "",
  "educationOL": false,
  "educationAL": false,
  "otherQualifications": "",
  "workExperience": "",
  "workExperienceAbroad": "",
  "expectedJobCategory": "",
  "guardianName": "",
  "guardianContact": ""
}`;

    console.log('ü§ñ Sending to Gemini...');
    const result = await model.generateContent(prompt);
    const response = result.response;
    const aiText = response.text();
    
    console.log('‚úÖ Raw Gemini Response:');
    console.log(aiText);
    
    // Parse JSON
    console.log('\nüì¶ Parsing JSON...');
    const jsonMatch = aiText.match(/\{[\s\S]*\}/);
    if (jsonMatch) {
      const extractedData = JSON.parse(jsonMatch[0]);
      console.log('‚úÖ Parsed Data for Auto-Fill:');
      console.log(JSON.stringify(extractedData, null, 2));
      
      console.log('\nüéØ Form Field Mapping Check:');
      console.log('Full Name:', extractedData.fullName);
      console.log('Address:', extractedData.permanentAddress);
      console.log('Province:', extractedData.province);
      console.log('District:', extractedData.district);
      console.log('Date of Birth:', extractedData.dateOfBirth);
      console.log('Mobile:', extractedData.mobilePhone);
      
      console.log('\nüéâ AUTO-FILL READY! Data will populate form fields correctly.');
    } else {
      console.log('‚ùå No JSON found in response');
    }
    
  } catch (error) {
    console.error('‚ùå Test failed:', error.message);
  }
}

testUpdatedAPI();