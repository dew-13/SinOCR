require('dotenv').config();
const { GoogleGenerativeAI } = require('@google/generative-ai');

async function testImprovedAccuracy() {
  try {
    console.log('üß™ Testing Improved Translation Accuracy...');
    
    const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);
    const model = genAI.getGenerativeModel({ model: 'gemini-1.5-flash' });

    const improvedPrompt = `
Extract data from this Sinhala form and TRANSLATE everything to English. Return ONLY JSON.

SAMPLE DATA:
1. ‡∑É‡∂∏‡∑ä‡∂¥‡∑ñ‡∂ª‡∑ä‡∂´ ‡∂±‡∂∏: ‡∂ö‡∂∏‡∂Ω‡∑ä ‡∂¥‡∑ô‡∂ª‡∑ö‡∂ª‡∑è
2. ‡∑É‡∑ä‡∂≠‡∑ä‚Äç‡∂ª‡∑ì/‡∂¥‡∑î‡∂ª‡∑î‡∑Ç: ‚òë ‡∂¥‡∑î‡∂ª‡∑î‡∑Ç  ‚òê ‡∑É‡∑ä‡∂≠‡∑ä‚Äç‡∂ª‡∑ì
3. ‡∑Ä‡∑í‡∑Ä‡∑è‡∑Ñ‡∂ö ‡∂≠‡∂≠‡∑ä‡∑Ä‡∂∫: ‚òë ‡∂Ö‡∑Ä‡∑í‡∑Ä‡∑è‡∑Ñ‡∂ö  ‚òê ‡∑Ä‡∑í‡∑Ä‡∑è‡∑Ñ‡∂ö
4. ‡∂¢‡∂Ç‡∂ú‡∂∏: 0771234567
5. O/L: ‚òë ‡∂á‡∂≠  ‚òê ‡∂±‡∑ê‡∂≠
6. ‡∂¥‡∑Ö‡∑è‡∂≠: ‡∂∂‡∑É‡∂ª‡∂ß

CRITICAL: TRANSLATE all Sinhala to English:
- ‡∂ö‡∂∏‡∂Ω‡∑ä ‡∂¥‡∑ô‡∂ª‡∑ö‡∂ª‡∑è ‚Üí "Kamal Perera"
- ‡∂¥‡∑î‡∂ª‡∑î‡∑Ç ‚Üí "Male", ‡∑É‡∑ä‡∂≠‡∑ä‚Äç‡∂ª‡∑ì ‚Üí "Female"
- ‡∂Ö‡∑Ä‡∑í‡∑Ä‡∑è‡∑Ñ‡∂ö ‚Üí "Single", ‡∑Ä‡∑í‡∑Ä‡∑è‡∑Ñ‡∂ö ‚Üí "Married"
- ‡∂á‡∂≠ ‚Üí true, ‡∂±‡∑ê‡∂≠ ‚Üí false
- ‡∂∂‡∑É‡∂ª‡∂ß ‚Üí "Western"
- Remove 0 from phone: 0771234567 ‚Üí "771234567"

Return ONLY JSON with ALL TEXT IN ENGLISH:
{
  "fullName": "",
  "sex": "",
  "maritalStatus": "",
  "mobilePhone": "",
  "educationOL": false,
  "province": ""
}`;

    console.log('üîÑ Testing improved translation...');
    const result = await model.generateContent(improvedPrompt);
    const response = result.response;
    const aiText = response.text();
    
    console.log('‚úÖ Improved AI Response:');
    console.log(aiText);
    
    const jsonRegex = /\{[\s\S]*\}/;
    const jsonMatch = jsonRegex.exec(aiText);
    if (jsonMatch) {
      const data = JSON.parse(jsonMatch[0]);
      console.log('\nüéØ Translation Accuracy Check:');
      console.log('‚úÖ Full Name (English):', data.fullName);
      console.log('‚úÖ Sex (English):', data.sex);
      console.log('‚úÖ Marital Status (English):', data.maritalStatus);
      console.log('‚úÖ Mobile (No prefix):', data.mobilePhone);
      console.log('‚úÖ O/L (Boolean):', data.educationOL);
      console.log('‚úÖ Province (English):', data.province);
      
      console.log('\nüöÄ Enhanced system ready for accurate form filling!');
    }
    
  } catch (error) {
    console.error('‚ùå Test failed:', error.message);
  }
}

testImprovedAccuracy();